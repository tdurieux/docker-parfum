"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var yargs = require("yargs/yargs");
exports.default = {
    providerFor: ["tar"],
    categories: ["ARCHIVE", "FILE_SYSTEM"],
    prefix: "SC-TAR",
    scenarios: [
        {
            mustHave: ["-x"],
            postProcess: [{ "tagLastElement": { "source": "args", "tag": "SC-TAR-FILE" } }],
            cmd: "$0 [args...]",
            name: "SC-TAR-EXTRACT",
            prefix: "SC-TAR",
            paths: ["add-file", "f", "file", "C", "directory"],
            booleans: ["x", "extract", "z", "gzip", "c", "create", "A", "catenate", "A", "concatenate", "t", "list", "d", "diff", "d", "compare", "test-label", "get", "delete", "acls", "no-acls", "no-selinux", "no-xattrs", "selinux", "xattrs", "u", "update", "v", "verbose", "help", "version", "k", "keep-old-files", "keep-directory-symlink", "keep-newer-files", "no-overwrite-dir", "overwrite", "overwrite-dir", "recursive-unlink", "remove-files", "skip-old-files", "G", "incremental", "n", "seek", "no-seek", "no-check-device", "check-device", "W", "verify", "U", "unlink-first", "S", "sparse", "s", "preserve-order", "s", "same-order", "p", "preserve-permissions", "p", "same-permissions", "numeric-owner", "no-same-owner", "no-same-permissions", "no-delay-directory-restore", "m", "touch", "clamp-mtime", "delay-directory-restore", "r", "append", "t", "list", "j", "bzip2", "J", "xz", "a", "auto-compress", "lzip", "lzma", "lzop", "ignore-command-error", "no-ignore-command-error", "O", "to-stdout", "force-local", "M", "multi-volume", "no-auto-compress", "z", "gunzip", "Z", "compress", "h", "dereference", "hard-dereference", "P", "absolute-names", "one-file-system", "l", "check-links", "full-time", "posix", "old-archive", "portability", "B", "read-full-records", "i", "ignore-zeros", "unquote", "null", "recursion", "no-recursion", "no-verbatim-files-from", "no-null", "exclude-vcs", "exclude-vcs-ignores", "exclude-backups", "exclude-caches", "exclude-caches-all", "exclude-caches-under"],
            strings: ["exclude", "exclude-ignore", "exclude-ignore-recursive", "exclude-tag", "exclude-tag-all", "exclude-tag-under", "record-size", "b", "blocking-factor", "H", "format", "V", "label", "I", "N", "newer", "newer-mtime", "suffix", "transform", "xform", "strip", "strip-components", "xattrs-exclude", "xattrs-include"],
            argv: function () {
                return yargs()
                    .describe("tar", "SC-TAR")
                    .help(false)
                    .version(false)
                    .exitProcess(false)
                    .showHelpOnFail(false)
                    .parserConfiguration({
                    "short-option-groups": true,
                    "boolean-negation": false,
                    "camel-case-expansion": false,
                    "parse-numbers": false,
                })
                    .command("$0 [args...]", "SC-TAR-EXTRACT")
                    .option("x", { "alias": "extract", "type": "boolean" })
                    .option("z", { "alias": "gzip", "type": "boolean" })
                    .option("c", { "alias": "create", "type": "boolean" })
                    .option("A", { "alias": "catenate", "type": "boolean" })
                    .option("A", { "alias": "concatenate", "type": "boolean" })
                    .option("t", { "alias": "list", "type": "boolean" })
                    .option("d", { "alias": "diff", "type": "boolean" })
                    .option("d", { "alias": "compare", "type": "boolean" })
                    .option("test-label", { "type": "boolean" })
                    .option("get", { "type": "boolean" })
                    .option("delete", { "type": "boolean" })
                    .option("acls", { "type": "boolean" })
                    .option("no-acls", { "type": "boolean" })
                    .option("no-selinux", { "type": "boolean" })
                    .option("no-xattrs", { "type": "boolean" })
                    .option("selinux", { "type": "boolean" })
                    .option("xattrs", { "type": "boolean" })
                    .option("u", { "alias": "update", "type": "boolean" })
                    .option("v", { "alias": "verbose", "type": "boolean" })
                    .option("help", { "type": "boolean" })
                    .option("version", { "type": "boolean" })
                    .option("k", { "alias": "keep-old-files", "type": "boolean" })
                    .option("keep-directory-symlink", { "type": "boolean" })
                    .option("keep-newer-files", { "type": "boolean" })
                    .option("no-overwrite-dir", { "type": "boolean" })
                    .option("overwrite", { "type": "boolean" })
                    .option("overwrite-dir", { "type": "boolean" })
                    .option("recursive-unlink", { "type": "boolean" })
                    .option("remove-files", { "type": "boolean" })
                    .option("skip-old-files", { "type": "boolean" })
                    .option("G", { "alias": "incremental", "type": "boolean" })
                    .option("n", { "alias": "seek", "type": "boolean" })
                    .option("no-seek", { "type": "boolean" })
                    .option("no-check-device", { "type": "boolean" })
                    .option("check-device", { "type": "boolean" })
                    .option("W", { "alias": "verify", "type": "boolean" })
                    .option("U", { "alias": "unlink-first", "type": "boolean" })
                    .option("S", { "alias": "sparse", "type": "boolean" })
                    .option("s", { "alias": "preserve-order", "type": "boolean" })
                    .option("s", { "alias": "same-order", "type": "boolean" })
                    .option("p", { "alias": "preserve-permissions", "type": "boolean" })
                    .option("p", { "alias": "same-permissions", "type": "boolean" })
                    .option("numeric-owner", { "type": "boolean" })
                    .option("no-same-owner", { "type": "boolean" })
                    .option("no-same-permissions", { "type": "boolean" })
                    .option("no-delay-directory-restore", { "type": "boolean" })
                    .option("m", { "alias": "touch", "type": "boolean" })
                    .option("clamp-mtime", { "type": "boolean" })
                    .option("delay-directory-restore", { "type": "boolean" })
                    .option("r", { "alias": "append", "type": "boolean" })
                    .option("t", { "alias": "list", "type": "boolean" })
                    .option("j", { "alias": "bzip2", "type": "boolean" })
                    .option("J", { "alias": "xz", "type": "boolean" })
                    .option("a", { "alias": "auto-compress", "type": "boolean" })
                    .option("lzip", { "type": "boolean" })
                    .option("lzma", { "type": "boolean" })
                    .option("lzop", { "type": "boolean" })
                    .option("ignore-command-error", { "type": "boolean" })
                    .option("no-ignore-command-error", { "type": "boolean" })
                    .option("O", { "alias": "to-stdout", "type": "boolean" })
                    .option("force-local", { "type": "boolean" })
                    .option("M", { "alias": "multi-volume", "type": "boolean" })
                    .option("no-auto-compress", { "type": "boolean" })
                    .option("z", { "alias": "gunzip", "type": "boolean" })
                    .option("Z", { "alias": "compress", "type": "boolean" })
                    .option("h", { "alias": "dereference", "type": "boolean" })
                    .option("hard-dereference", { "type": "boolean" })
                    .option("P", { "alias": "absolute-names", "type": "boolean" })
                    .option("one-file-system", { "type": "boolean" })
                    .option("l", { "alias": "check-links", "type": "boolean" })
                    .option("full-time", { "type": "boolean" })
                    .option("posix", { "type": "boolean" })
                    .option("old-archive", { "type": "boolean" })
                    .option("portability", { "type": "boolean" })
                    .option("B", { "alias": "read-full-records", "type": "boolean" })
                    .option("i", { "alias": "ignore-zeros", "type": "boolean" })
                    .option("unquote", { "type": "boolean" })
                    .option("null", { "type": "boolean" })
                    .option("recursion", { "type": "boolean" })
                    .option("no-recursion", { "type": "boolean" })
                    .option("no-verbatim-files-from", { "type": "boolean" })
                    .option("no-null", { "type": "boolean" })
                    .option("exclude-vcs", { "type": "boolean" })
                    .option("exclude-vcs-ignores", { "type": "boolean" })
                    .option("exclude-backups", { "type": "boolean" })
                    .option("exclude-caches", { "type": "boolean" })
                    .option("exclude-caches-all", { "type": "boolean" })
                    .option("exclude-caches-under", { "type": "boolean" })
                    .option("exclude", { "type": "string" })
                    .option("exclude-ignore", { "type": "string" })
                    .option("exclude-ignore-recursive", { "type": "string" })
                    .option("exclude-tag", { "type": "string" })
                    .option("exclude-tag-all", { "type": "string" })
                    .option("exclude-tag-under", { "type": "string" })
                    .option("record-size", { "type": "string" })
                    .option("b", { "alias": "blocking-factor", "type": "string" })
                    .option("H", { "alias": "format", "type": "string" })
                    .option("V", { "alias": "label", "type": "string" })
                    .option("I", { "type": "string" })
                    .option("N", { "alias": "newer", "type": "string" })
                    .option("newer-mtime", { "type": "string" })
                    .option("suffix", { "type": "string" })
                    .option("transform", { "type": "string" })
                    .option("xform", { "type": "string" })
                    .option("strip", { "type": "string" })
                    .option("strip-components", { "type": "string" })
                    .option("xattrs-exclude", { "type": "string" })
                    .option("xattrs-include", { "type": "string" })
                    .option("add-file", { "type": "string" })
                    .option("f", { "alias": "file", "type": "string" })
                    .option("C", { "alias": "directory", "type": "string" })
                    .option("T", { "alias": "files-from", "type": "array" });
            }
        },
        {
            mustHave: ["-c"],
            postProcess: [{ "tagLastElement": { "source": "args", "tag": "SC-TAR-FILE" } }],
            cmd: "$0 [args...]",
            name: "SC-TAR-COMPRESS",
            prefix: "SC-TAR",
            paths: ["add-file", "f", "file", "C", "directory"],
            booleans: ["x", "extract", "z", "gzip", "c", "create", "A", "catenate", "A", "concatenate", "t", "list", "d", "diff", "d", "compare", "test-label", "get", "delete", "acls", "no-acls", "no-selinux", "no-xattrs", "selinux", "xattrs", "u", "update", "v", "verbose", "help", "version", "k", "keep-old-files", "keep-directory-symlink", "keep-newer-files", "no-overwrite-dir", "overwrite", "overwrite-dir", "recursive-unlink", "remove-files", "skip-old-files", "G", "incremental", "n", "seek", "no-seek", "no-check-device", "check-device", "W", "verify", "U", "unlink-first", "S", "sparse", "s", "preserve-order", "s", "same-order", "p", "preserve-permissions", "p", "same-permissions", "numeric-owner", "no-same-owner", "no-same-permissions", "no-delay-directory-restore", "m", "touch", "clamp-mtime", "delay-directory-restore", "r", "append", "t", "list", "j", "bzip2", "J", "xz", "a", "auto-compress", "lzip", "lzma", "lzop", "ignore-command-error", "no-ignore-command-error", "O", "to-stdout", "force-local", "M", "multi-volume", "no-auto-compress", "z", "gunzip", "Z", "compress", "h", "dereference", "hard-dereference", "P", "absolute-names", "one-file-system", "l", "check-links", "full-time", "posix", "old-archive", "portability", "B", "read-full-records", "i", "ignore-zeros", "unquote", "null", "recursion", "no-recursion", "no-verbatim-files-from", "no-null", "exclude-vcs", "exclude-vcs-ignores", "exclude-backups", "exclude-caches", "exclude-caches-all", "exclude-caches-under"],
            strings: ["exclude", "exclude-ignore", "exclude-ignore-recursive", "exclude-tag", "exclude-tag-all", "exclude-tag-under", "record-size", "b", "blocking-factor", "H", "format", "V", "label", "I", "N", "newer", "newer-mtime", "suffix", "transform", "xform", "strip", "strip-components", "xattrs-exclude", "xattrs-include"],
            argv: function () {
                return yargs()
                    .describe("tar", "SC-TAR")
                    .help(false)
                    .version(false)
                    .exitProcess(false)
                    .showHelpOnFail(false)
                    .parserConfiguration({
                    "short-option-groups": true,
                    "boolean-negation": false,
                    "camel-case-expansion": false,
                    "parse-numbers": false,
                })
                    .command("$0 [args...]", "SC-TAR-COMPRESS")
                    .option("x", { "alias": "extract", "type": "boolean" })
                    .option("z", { "alias": "gzip", "type": "boolean" })
                    .option("c", { "alias": "create", "type": "boolean" })
                    .option("A", { "alias": "catenate", "type": "boolean" })
                    .option("A", { "alias": "concatenate", "type": "boolean" })
                    .option("t", { "alias": "list", "type": "boolean" })
                    .option("d", { "alias": "diff", "type": "boolean" })
                    .option("d", { "alias": "compare", "type": "boolean" })
                    .option("test-label", { "type": "boolean" })
                    .option("get", { "type": "boolean" })
                    .option("delete", { "type": "boolean" })
                    .option("acls", { "type": "boolean" })
                    .option("no-acls", { "type": "boolean" })
                    .option("no-selinux", { "type": "boolean" })
                    .option("no-xattrs", { "type": "boolean" })
                    .option("selinux", { "type": "boolean" })
                    .option("xattrs", { "type": "boolean" })
                    .option("u", { "alias": "update", "type": "boolean" })
                    .option("v", { "alias": "verbose", "type": "boolean" })
                    .option("help", { "type": "boolean" })
                    .option("version", { "type": "boolean" })
                    .option("k", { "alias": "keep-old-files", "type": "boolean" })
                    .option("keep-directory-symlink", { "type": "boolean" })
                    .option("keep-newer-files", { "type": "boolean" })
                    .option("no-overwrite-dir", { "type": "boolean" })
                    .option("overwrite", { "type": "boolean" })
                    .option("overwrite-dir", { "type": "boolean" })
                    .option("recursive-unlink", { "type": "boolean" })
                    .option("remove-files", { "type": "boolean" })
                    .option("skip-old-files", { "type": "boolean" })
                    .option("G", { "alias": "incremental", "type": "boolean" })
                    .option("n", { "alias": "seek", "type": "boolean" })
                    .option("no-seek", { "type": "boolean" })
                    .option("no-check-device", { "type": "boolean" })
                    .option("check-device", { "type": "boolean" })
                    .option("W", { "alias": "verify", "type": "boolean" })
                    .option("U", { "alias": "unlink-first", "type": "boolean" })
                    .option("S", { "alias": "sparse", "type": "boolean" })
                    .option("s", { "alias": "preserve-order", "type": "boolean" })
                    .option("s", { "alias": "same-order", "type": "boolean" })
                    .option("p", { "alias": "preserve-permissions", "type": "boolean" })
                    .option("p", { "alias": "same-permissions", "type": "boolean" })
                    .option("numeric-owner", { "type": "boolean" })
                    .option("no-same-owner", { "type": "boolean" })
                    .option("no-same-permissions", { "type": "boolean" })
                    .option("no-delay-directory-restore", { "type": "boolean" })
                    .option("m", { "alias": "touch", "type": "boolean" })
                    .option("clamp-mtime", { "type": "boolean" })
                    .option("delay-directory-restore", { "type": "boolean" })
                    .option("r", { "alias": "append", "type": "boolean" })
                    .option("t", { "alias": "list", "type": "boolean" })
                    .option("j", { "alias": "bzip2", "type": "boolean" })
                    .option("J", { "alias": "xz", "type": "boolean" })
                    .option("a", { "alias": "auto-compress", "type": "boolean" })
                    .option("lzip", { "type": "boolean" })
                    .option("lzma", { "type": "boolean" })
                    .option("lzop", { "type": "boolean" })
                    .option("ignore-command-error", { "type": "boolean" })
                    .option("no-ignore-command-error", { "type": "boolean" })
                    .option("O", { "alias": "to-stdout", "type": "boolean" })
                    .option("force-local", { "type": "boolean" })
                    .option("M", { "alias": "multi-volume", "type": "boolean" })
                    .option("no-auto-compress", { "type": "boolean" })
                    .option("z", { "alias": "gunzip", "type": "boolean" })
                    .option("Z", { "alias": "compress", "type": "boolean" })
                    .option("h", { "alias": "dereference", "type": "boolean" })
                    .option("hard-dereference", { "type": "boolean" })
                    .option("P", { "alias": "absolute-names", "type": "boolean" })
                    .option("one-file-system", { "type": "boolean" })
                    .option("l", { "alias": "check-links", "type": "boolean" })
                    .option("full-time", { "type": "boolean" })
                    .option("posix", { "type": "boolean" })
                    .option("old-archive", { "type": "boolean" })
                    .option("portability", { "type": "boolean" })
                    .option("B", { "alias": "read-full-records", "type": "boolean" })
                    .option("i", { "alias": "ignore-zeros", "type": "boolean" })
                    .option("unquote", { "type": "boolean" })
                    .option("null", { "type": "boolean" })
                    .option("recursion", { "type": "boolean" })
                    .option("no-recursion", { "type": "boolean" })
                    .option("no-verbatim-files-from", { "type": "boolean" })
                    .option("no-null", { "type": "boolean" })
                    .option("exclude-vcs", { "type": "boolean" })
                    .option("exclude-vcs-ignores", { "type": "boolean" })
                    .option("exclude-backups", { "type": "boolean" })
                    .option("exclude-caches", { "type": "boolean" })
                    .option("exclude-caches-all", { "type": "boolean" })
                    .option("exclude-caches-under", { "type": "boolean" })
                    .option("exclude", { "type": "string" })
                    .option("exclude-ignore", { "type": "string" })
                    .option("exclude-ignore-recursive", { "type": "string" })
                    .option("exclude-tag", { "type": "string" })
                    .option("exclude-tag-all", { "type": "string" })
                    .option("exclude-tag-under", { "type": "string" })
                    .option("record-size", { "type": "string" })
                    .option("b", { "alias": "blocking-factor", "type": "string" })
                    .option("H", { "alias": "format", "type": "string" })
                    .option("V", { "alias": "label", "type": "string" })
                    .option("I", { "type": "string" })
                    .option("N", { "alias": "newer", "type": "string" })
                    .option("newer-mtime", { "type": "string" })
                    .option("suffix", { "type": "string" })
                    .option("transform", { "type": "string" })
                    .option("xform", { "type": "string" })
                    .option("strip", { "type": "string" })
                    .option("strip-components", { "type": "string" })
                    .option("xattrs-exclude", { "type": "string" })
                    .option("xattrs-include", { "type": "string" })
                    .option("add-file", { "type": "string" })
                    .option("f", { "alias": "file", "type": "string" })
                    .option("C", { "alias": "directory", "type": "string" })
                    .option("T", { "alias": "files-from", "type": "array" });
            }
        },
        {
            postProcess: [{ "tagLastElement": { "source": "args", "tag": "SC-TAR-FILE" } }],
            cmd: "$0 [args...]",
            name: "SC-TAR",
            prefix: "SC-TAR",
            paths: ["add-file", "f", "file", "C", "directory"],
            booleans: ["x", "extract", "z", "gzip", "c", "create", "A", "catenate", "A", "concatenate", "t", "list", "d", "diff", "d", "compare", "test-label", "get", "delete", "acls", "no-acls", "no-selinux", "no-xattrs", "selinux", "xattrs", "u", "update", "v", "verbose", "help", "version", "k", "keep-old-files", "keep-directory-symlink", "keep-newer-files", "no-overwrite-dir", "overwrite", "overwrite-dir", "recursive-unlink", "remove-files", "skip-old-files", "G", "incremental", "n", "seek", "no-seek", "no-check-device", "check-device", "W", "verify", "U", "unlink-first", "S", "sparse", "s", "preserve-order", "s", "same-order", "p", "preserve-permissions", "p", "same-permissions", "numeric-owner", "no-same-owner", "no-same-permissions", "no-delay-directory-restore", "m", "touch", "clamp-mtime", "delay-directory-restore", "r", "append", "t", "list", "j", "bzip2", "J", "xz", "a", "auto-compress", "lzip", "lzma", "lzop", "ignore-command-error", "no-ignore-command-error", "O", "to-stdout", "force-local", "M", "multi-volume", "no-auto-compress", "z", "gunzip", "Z", "compress", "h", "dereference", "hard-dereference", "P", "absolute-names", "one-file-system", "l", "check-links", "full-time", "posix", "old-archive", "portability", "B", "read-full-records", "i", "ignore-zeros", "unquote", "null", "recursion", "no-recursion", "no-verbatim-files-from", "no-null", "exclude-vcs", "exclude-vcs-ignores", "exclude-backups", "exclude-caches", "exclude-caches-all", "exclude-caches-under"],
            strings: ["exclude", "exclude-ignore", "exclude-ignore-recursive", "exclude-tag", "exclude-tag-all", "exclude-tag-under", "record-size", "b", "blocking-factor", "H", "format", "V", "label", "I", "N", "newer", "newer-mtime", "suffix", "transform", "xform", "strip", "strip-components", "xattrs-exclude", "xattrs-include"],
            argv: function () {
                return yargs()
                    .describe("tar", "SC-TAR")
                    .help(false)
                    .version(false)
                    .exitProcess(false)
                    .showHelpOnFail(false)
                    .parserConfiguration({
                    "short-option-groups": true,
                    "boolean-negation": false,
                    "camel-case-expansion": false,
                    "parse-numbers": false,
                })
                    .command("$0 [args...]", "SC-TAR")
                    .option("x", { "alias": "extract", "type": "boolean" })
                    .option("z", { "alias": "gzip", "type": "boolean" })
                    .option("c", { "alias": "create", "type": "boolean" })
                    .option("A", { "alias": "catenate", "type": "boolean" })
                    .option("A", { "alias": "concatenate", "type": "boolean" })
                    .option("t", { "alias": "list", "type": "boolean" })
                    .option("d", { "alias": "diff", "type": "boolean" })
                    .option("d", { "alias": "compare", "type": "boolean" })
                    .option("test-label", { "type": "boolean" })
                    .option("get", { "type": "boolean" })
                    .option("delete", { "type": "boolean" })
                    .option("acls", { "type": "boolean" })
                    .option("no-acls", { "type": "boolean" })
                    .option("no-selinux", { "type": "boolean" })
                    .option("no-xattrs", { "type": "boolean" })
                    .option("selinux", { "type": "boolean" })
                    .option("xattrs", { "type": "boolean" })
                    .option("u", { "alias": "update", "type": "boolean" })
                    .option("v", { "alias": "verbose", "type": "boolean" })
                    .option("help", { "type": "boolean" })
                    .option("version", { "type": "boolean" })
                    .option("k", { "alias": "keep-old-files", "type": "boolean" })
                    .option("keep-directory-symlink", { "type": "boolean" })
                    .option("keep-newer-files", { "type": "boolean" })
                    .option("no-overwrite-dir", { "type": "boolean" })
                    .option("overwrite", { "type": "boolean" })
                    .option("overwrite-dir", { "type": "boolean" })
                    .option("recursive-unlink", { "type": "boolean" })
                    .option("remove-files", { "type": "boolean" })
                    .option("skip-old-files", { "type": "boolean" })
                    .option("G", { "alias": "incremental", "type": "boolean" })
                    .option("n", { "alias": "seek", "type": "boolean" })
                    .option("no-seek", { "type": "boolean" })
                    .option("no-check-device", { "type": "boolean" })
                    .option("check-device", { "type": "boolean" })
                    .option("W", { "alias": "verify", "type": "boolean" })
                    .option("U", { "alias": "unlink-first", "type": "boolean" })
                    .option("S", { "alias": "sparse", "type": "boolean" })
                    .option("s", { "alias": "preserve-order", "type": "boolean" })
                    .option("s", { "alias": "same-order", "type": "boolean" })
                    .option("p", { "alias": "preserve-permissions", "type": "boolean" })
                    .option("p", { "alias": "same-permissions", "type": "boolean" })
                    .option("numeric-owner", { "type": "boolean" })
                    .option("no-same-owner", { "type": "boolean" })
                    .option("no-same-permissions", { "type": "boolean" })
                    .option("no-delay-directory-restore", { "type": "boolean" })
                    .option("m", { "alias": "touch", "type": "boolean" })
                    .option("clamp-mtime", { "type": "boolean" })
                    .option("delay-directory-restore", { "type": "boolean" })
                    .option("r", { "alias": "append", "type": "boolean" })
                    .option("t", { "alias": "list", "type": "boolean" })
                    .option("j", { "alias": "bzip2", "type": "boolean" })
                    .option("J", { "alias": "xz", "type": "boolean" })
                    .option("a", { "alias": "auto-compress", "type": "boolean" })
                    .option("lzip", { "type": "boolean" })
                    .option("lzma", { "type": "boolean" })
                    .option("lzop", { "type": "boolean" })
                    .option("ignore-command-error", { "type": "boolean" })
                    .option("no-ignore-command-error", { "type": "boolean" })
                    .option("O", { "alias": "to-stdout", "type": "boolean" })
                    .option("force-local", { "type": "boolean" })
                    .option("M", { "alias": "multi-volume", "type": "boolean" })
                    .option("no-auto-compress", { "type": "boolean" })
                    .option("z", { "alias": "gunzip", "type": "boolean" })
                    .option("Z", { "alias": "compress", "type": "boolean" })
                    .option("h", { "alias": "dereference", "type": "boolean" })
                    .option("hard-dereference", { "type": "boolean" })
                    .option("P", { "alias": "absolute-names", "type": "boolean" })
                    .option("one-file-system", { "type": "boolean" })
                    .option("l", { "alias": "check-links", "type": "boolean" })
                    .option("full-time", { "type": "boolean" })
                    .option("posix", { "type": "boolean" })
                    .option("old-archive", { "type": "boolean" })
                    .option("portability", { "type": "boolean" })
                    .option("B", { "alias": "read-full-records", "type": "boolean" })
                    .option("i", { "alias": "ignore-zeros", "type": "boolean" })
                    .option("unquote", { "type": "boolean" })
                    .option("null", { "type": "boolean" })
                    .option("recursion", { "type": "boolean" })
                    .option("no-recursion", { "type": "boolean" })
                    .option("no-verbatim-files-from", { "type": "boolean" })
                    .option("no-null", { "type": "boolean" })
                    .option("exclude-vcs", { "type": "boolean" })
                    .option("exclude-vcs-ignores", { "type": "boolean" })
                    .option("exclude-backups", { "type": "boolean" })
                    .option("exclude-caches", { "type": "boolean" })
                    .option("exclude-caches-all", { "type": "boolean" })
                    .option("exclude-caches-under", { "type": "boolean" })
                    .option("exclude", { "type": "string" })
                    .option("exclude-ignore", { "type": "string" })
                    .option("exclude-ignore-recursive", { "type": "string" })
                    .option("exclude-tag", { "type": "string" })
                    .option("exclude-tag-all", { "type": "string" })
                    .option("exclude-tag-under", { "type": "string" })
                    .option("record-size", { "type": "string" })
                    .option("b", { "alias": "blocking-factor", "type": "string" })
                    .option("H", { "alias": "format", "type": "string" })
                    .option("V", { "alias": "label", "type": "string" })
                    .option("I", { "type": "string" })
                    .option("N", { "alias": "newer", "type": "string" })
                    .option("newer-mtime", { "type": "string" })
                    .option("suffix", { "type": "string" })
                    .option("transform", { "type": "string" })
                    .option("xform", { "type": "string" })
                    .option("strip", { "type": "string" })
                    .option("strip-components", { "type": "string" })
                    .option("xattrs-exclude", { "type": "string" })
                    .option("xattrs-include", { "type": "string" })
                    .option("add-file", { "type": "string" })
                    .option("f", { "alias": "file", "type": "string" })
                    .option("C", { "alias": "directory", "type": "string" })
                    .option("T", { "alias": "files-from", "type": "array" });
            }
        },
    ]
};
//# sourceMappingURL=tar.js.map